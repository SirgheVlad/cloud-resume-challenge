name: CI/CD Pipeline for Visitor Counter Backend

on:
  push:
    branches:
      - 'main'
      - 'feature**'
  delete:
    branches:
      - 'feature**'

env:
  SAM_TEMPLATE: template.yaml
  PROD_STACK_NAME: visitor-counter-stack
  DEV_STACK_NAME: visitor-counter-dev-stack
  ARTIFACTS_BUCKET: visitor-counter-pipeline-artifacts
  REGION: us-east-1
  PIPELINE_EXECUTION_ROLE: arn:aws:iam::243547532538:role/VisitorCounterPipelineExecutionRole
  CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::243547532538:role/VisitorCounterCloudFormationExecutionRole

jobs:
  test:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install -r requirements.txt
        working-directory: ./src
      - name: Run unit tests
        run: pytest
        working-directory: ./src

  delete-feature:
    if: startsWith(github.event.ref, 'feature') && github.event_name == 'delete'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
          version: 1.120.0
      - name: Assume the pipeline user role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.PIPELINE_EXECUTION_ROLE }}
          aws-region: ${{ env.REGION }}
          role-session-name: feature-delete
          role-skip-session-tagging: true
      - name: Delete feature branch stack
        env:
          FEATURE_BRANCH_NAME: ${{ github.event.ref }}
        run: |
          sam delete \
            --stack-name $(echo ${FEATURE_BRANCH_NAME##*/} | tr -cd '[a-zA-Z0-9-]') \
            --region ${REGION} \
            --no-prompts

  build-and-deploy-feature:
    if: startsWith(github.ref, 'refs/heads/feature')
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
          version: 1.120.0
      - name: Build SAM application
        run: sam build --template ${SAM_TEMPLATE} --use-container
      - name: Assume the pipeline user role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.PIPELINE_EXECUTION_ROLE }}
          aws-region: ${{ env.REGION }}
          role-session-name: feature-deployment
          role-skip-session-tagging: true
      - name: Deploy to feature/dev stack
        run: |
          sam deploy --stack-name ${DEV_STACK_NAME} \
            --template ${SAM_TEMPLATE} \
            --capabilities CAPABILITY_IAM \
            --region ${REGION} \
            --s3-bucket ${ARTIFACTS_BUCKET} \
            --no-fail-on-empty-changeset \
            --no-confirm-changeset \
            --role-arn ${CLOUDFORMATION_EXECUTION_ROLE}
        env:
          SAM_CLI_TELEMETRY: 0

  build-and-package:
    if: github.ref == 'refs/heads/main'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
          version: 1.120.0
      - name: Build SAM application
        run: sam build --template ${SAM_TEMPLATE} --use-container
      - name: Assume the pipeline user role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.PIPELINE_EXECUTION_ROLE }}
          aws-region: ${{ env.REGION }}
          role-session-name: packaging
          role-skip-session-tagging: true
      - name: Validate S3 bucket access
        run: aws s3 ls s3://${ARTIFACTS_BUCKET} || exit 1
      - name: Package the application
        run: |
          sam package --s3-bucket ${ARTIFACTS_BUCKET} --region ${REGION} --output-template-file packaged.yaml --no-resolve-s3
      - uses: actions/upload-artifact@v4
        with:
          name: packaged.yaml
          path: packaged.yaml

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [build-and-package]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
          version: 1.120.0
      - uses: actions/download-artifact@v4
        with:
          name: packaged.yaml
      - name: Assume the pipeline user role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.PIPELINE_EXECUTION_ROLE }}
          aws-region: ${{ env.REGION }}
          role-session-name: deployment
          role-skip-session-tagging: true
      - name: Deploy to the prod stack
        run: |
          sam deploy --stack-name ${PROD_STACK_NAME} \
            --template packaged.yaml \
            --capabilities CAPABILITY_IAM \
            --region ${REGION} \
            --s3-bucket ${ARTIFACTS_BUCKET} \
            --no-fail-on-empty-changeset \
            --no-confirm-changeset \
            --role-arn ${CLOUDFORMATION_EXECUTION_ROLE}
        env:
          SAM_CLI_TELEMETRY: 0

  integration-test:
    if: github.ref == 'refs/heads/main'
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          # Placeholder for integration tests
          echo "Running integration tests..."
